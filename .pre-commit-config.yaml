# Pre-commit hooks configuration
# See https://pre-commit.com for more information
# Installation: pip install pre-commit OR uv tool install pre-commit
# Setup: pre-commit install
# Run manually: pre-commit run --all-files
default_language_version:
  python: python3.11
repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
        exclude: '\.meta$' # Unity meta files
      - id: check-yaml
        exclude: '\.unity$' # Unity scene files
      - id: check-json
        exclude: '\.meta$|\.asmdef$' # Unity files use JSON5
      - id: check-added-large-files
        args: ['--maxkb=2048']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: mixed-line-ending
        args: ['--fix=lf']
        exclude: '\.bat$|\.cmd$|\.ps1$|\.yaml$|\.yml$' # Keep CRLF for Windows scripts, skip YAML
      - id: detect-private-key
        exclude: 'test.*|mock.*|dummy.*|\.encrypted$|\.sops\.json$'
  - repo: https://github.com/Yelp/detect-secrets
    # Secrets detection

    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: 'test.*|mock.*|\.lock$|projects/code-quality/.*\.meta$|projects/client/.*\.meta$|\.encrypted$|\.sops\.json$|docs/index/registry\.json$'
  - repo: https://github.com/gitleaks/gitleaks
    # Gitleaks - Advanced secret scanning

    rev: v8.21.4
    hooks:
      - id: gitleaks
        name: Gitleaks (secret scanning)
        description: Scan for secrets and sensitive information
        entry: gitleaks detect --source . --verbose --no-git --redact --config .gitleaks.toml
        language: system
        pass_filenames: false
  - repo: https://github.com/igorshubovych/markdownlint-cli
    # Markdown linting

    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: ['--fix']
        exclude: 'CHANGELOG.md|node_modules/|\.specify/.*\.md$|docs/.*\.md$|build/nuke/build/Components/README\.md$|packages/scoped-6571/com\.contractwork\.sangocard\.build/dotnet~/tool/.*\.md$'
  - repo: https://github.com/adrienverge/yamllint
    # YAML linting and formatting

    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ['-c', '.yamllint.yaml']
        description: Lint YAML files
  - repo: https://github.com/google/yamlfmt
    rev: v0.11.0
    hooks:
      - id: yamlfmt
        exclude: '\.github/workflows/|\.unity$|qodana\.yaml'
  - repo: https://github.com/editorconfig-checker/editorconfig-checker.python
    # EditorConfig enforcement

    rev: 2.7.3
    hooks:
      - id: editorconfig-checker
        exclude: '\.meta$|\.asset$|\.unity$|\.md$|\.gemini/code-review-config\.yaml$|\.pre-commit-config\.yaml$|\.yamllint\.yaml$|\.sops\.yaml$|\.secrets\.baseline$|packages/scoped-6571/com\.contractwork\.sangocard\.build/dotnet~/tool/.*\.(cs|txt|ps1|props)$|scripts/.*\.ps1$|Taskfile\.yml$'
  - repo: local
    hooks:
      # Prevent committing plaintext Terraform secrets
      - id: terraform-secrets-check
        name: Terraform Secrets Protection
        entry: bash -c 'if git diff --cached --name-only | grep -E "infra/terraform/secrets/.*\.json$" | grep -v "\.example$" | grep -v "\.encrypted$" | grep -v "\.sops\.json$"; then echo "ERROR - Attempting to commit plaintext secrets! Use SOPS encryption first."; exit 1; fi'
        language: system
        pass_filenames: false
        description: Prevents committing plaintext Terraform secrets
      - id: age-key-check
        # Prevent committing age private keys

        name: Age Private Key Protection
        entry: bash -c 'if git diff --cached --name-only | grep -E "age\.key$"; then echo "ERROR - Attempting to commit age private key! This must never be committed."; exit 1; fi'
        language: system
        pass_filenames: false
        description: Prevents committing age private keys
      - id: sops-config-check
        # Validate SOPS config before commit

        name: SOPS Config Validation
        entry: bash -c 'if [ -f infra/terraform/.sops.yaml ]; then grep -q "age1REPLACEME" infra/terraform/.sops.yaml && echo "ERROR - .sops.yaml still has placeholder age key. Run New-AgeKeyPair.ps1 and update .sops.yaml first." && exit 1 || exit 0; fi'
        language: system
        pass_filenames: false
        description: Validates SOPS configuration has real age key
      - id: partial-class-interface-separation
        # C# partial class pattern validation (R-CODE-090)

        name: Partial Class Interface Separation (R-CODE-090)
        entry: python git-hooks/python/check_partial_class_pattern.py
        language: python
        files: '\.cs$'
        exclude: 'projects/client/|\.g\.cs$|\.designer\.cs$'
        pass_filenames: false
        description: Validates partial class pattern for multi-interface classes
      - id: check-scattered-docs
        name: Scattered Documentation Detection (R-DOC-001)
        entry: python git-hooks/python/check_scattered_docs.py
        language: python
        files: '\.md$'
        pass_filenames: false
        description: Blocks markdown files in non-canonical locations
      - id: docs-validate
        name: Documentation Front-Matter Validation (R-DOC-002)
        entry: python git-hooks/python/docs_validate.py --pre-commit
        language: python
        files: '^docs/.*\.md$'
        exclude: 'docs/index/registry\.json$'
        pass_filenames: false
        description: Validates documentation front-matter and detects duplicates
        additional_dependencies:
          - pyyaml
          - simhash
          - rapidfuzz
  - repo: https://github.com/compilerla/conventional-pre-commit
    # Commit message validation

    rev: v3.1.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--strict]
        description: Enforce Conventional Commits format
# CI-specific configuration

ci:
  autofix_commit_msg: |
    chore: auto-fixes from pre-commit hooks

    [skip ci]
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: 'chore: update pre-commit hooks'
  autoupdate_schedule: quarterly
  skip:
    - partial-class-interface-separation # Skip in CI (Python hook)
    - check-scattered-docs # Scattered docs check runs in CI (Python hook)
    - gitleaks # Skip gitleaks in CI (runs separately)
    - docs-validate # Docs validation runs in dedicated GitHub Action
